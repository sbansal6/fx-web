<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>AdTools:- Decode</title>

    <!--jquery ui css-->
    <link href="jquery-ui-1.11.4/jquery-ui.min.css" rel="stylesheet" />
      <!--bootstrap-->
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet" />

    <!-- Custom CSS -->
    <link href="css/sb-admin.css" rel="stylesheet">
    <!-- Custom Fonts -->
    <link href="font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <!-- alpaca -->
    <link type="text/css" href="//code.cloudcms.com/alpaca/1.5.17/bootstrap/alpaca.min.css" rel="stylesheet" />

    <!--syncfusion-->
    <link href="syncfusion-javascript/Content/ej/web/default-theme/ej.web.all.min.css" rel="stylesheet" />

    <style>
        .File {
            position: absolute;
            top: 30px;
            left: 30px;
        }
        .Google {
            position: absolute;
            top: 30px;
            left: 600px;
        }
        .left { float: left; margin: 0 .5em .5em 0; }


    </style>

</head>
<body>
<div id="wrapper">

    <!-- Navigation -->
    <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="/">AdTools</a>
        </div>
        <!-- Sidebar Menu Items - These collapse to the responsive navigation menu on small screens -->
        <div class="collapse navbar-collapse navbar-ex1-collapse">
            <ul class="nav navbar-nav side-nav">
                <li>
                    <a href="/">Home</a>
                </li>
                <li>
                    <a href="/decode"><i class="fa  fa-unlock-alt fa-1x"></i>&nbsp;&nbsp;&nbsp;Decode</a>
                </li>
                <li>
                    <a href="/encode"><i class="fa fa-lock fa-1x"></i>&nbsp;&nbsp;&nbsp;Encode</a>
                </li>
                <li class="active">
                    <a href="/google"><i class="fa fa-google fa-1x"></i>&nbsp;&nbsp;&nbsp;GoogleFeed</a>
                </li>

            </ul>
        </div>
        <!-- /.navbar-collapse -->
    </nav>

    <div id="page-wrapper">

        <div class="container-fluid">

            <!-- Page Heading -->
            <div class="row">
                <div class="col-lg-12">
                    <h1 class="page-header">
                        Feed Set Up <small></small>
                    </h1>

                </div>
            </div>
            <!-- /.row -->

            <div class="row">
                <!----------------Splitter Control---------------->
                <div id="outterSplitter">
                    <div>
                        <div class="cont">
                            <div id="canvas" class="col-md-8 canvas" style="width: 800px;height: 1500px;border:solid">
                            </div>
                        </div>
                    </div>
                    <div>
                        <div class="cont">
                            <div id='Grid'></div>
                        </div>
                    </div>
                </div>
                <!------------------------------------------------->
            </div>


        </div>
        <!-- /.container-fluid -->

    </div>
    <!-- /#page-wrapper -->

</div>
<div id="myModal">
    <div id="form"></div>
</div>
</body>

<script src="js/jquery.min.js"></script>
<script src="jquery-ui-1.11.4/jquery-ui.js"></script>
<script src="js/bootstrap.min.js"></script>
<script src="js/jsPlumb-2.1.2-min.js"></script>
<script src="js/scripts.js"></script>
<script src="js/keyboard.min.js"></script>
<!--syncfusion-->
<script src="jquery.easing/js/jquery.easing.min.js"></script>
<script src="syncfusion-javascript/Scripts/jsrender.min.js"></script>
<script src="syncfusion-javascript/Scripts/ej/web/ej.web.all.min.js"></script>
<!-- handlebars -->
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.0/handlebars.js"></script>
<!--alpaca    -->
<script type="text/javascript" src="//code.cloudcms.com/alpaca/1.5.17/bootstrap/alpaca.min.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/jquery.form/3.51/jquery.form.min.js"></script>

<script>

    String.prototype.format = function(placeholders) {
        if ($.isArray(placeholders)) {
            var args = arguments;
            return this.replace(/{(\d+)}/g, function(match, number) {
                return typeof args[number] != 'undefined'
                        ? args[number]
                        : match
                        ;
            });
        }
        else { //Object
            var s = this;
            for(var propertyName in placeholders) {
                var re = new RegExp('{' + propertyName + '}', 'gm');
                s = s.replace(re, placeholders[propertyName]);
            }
            return s;
        }
    };
    var shipDetails = [
        { Name: 'Hanari Carnes', City: 'Brazil' },
        { Name: 'Split Rail Beer & Ale', City: 'USA' },
        { Name: 'Ricardo Adocicados', City: 'Brazil' }
    ];

    var nodes = [
        {    name:'File'
            ,label:'File'
            ,type:'source'
            ,image:"http://www.knowledgebase-script.com/kb/assets/file-txt.png"
            ,fields:[
             {name:'field1'}
            ,{name:'field2'}
            ,{name:'field3'}
        ],
            schema : {
                "type": "object",
                "properties": {
                    "selectFile": {
                        "type": "string",
                        "format": "uri"
                    },
                    "type": {
                        "type":"string",
                        "title":"FileType",
                        "enum":['csv','tab']
                    }
                }
            },
            options :{
                "fields":{
                    "selectFile": {
                        "type": "file"

                    },
                    "type":{
                        "removeDefaultNone":true
                    }
                },
                "form": {
                    "attributes": {
                        "method": "POST",
                        "action": "http://localhost:3001/upload"
                    },
                    "buttons": {
                        "submit": {
                            "value": "Submit the Form",
                            "click": function(){
                                // this has all the values, use this to update data object or any other object on save.
                                var val = this.getValue();
                                var form = $('#alpaca2')
                                form.ajaxSubmit({
                                    error: function(xhr) {
                                        console.log('error happend in form submit',xhr.status)
                                        alert('Error: ' + xhr.status);
                                    },
                                    success: function(response) {
                                        $("#status").empty().text(response);
                                        alert(JSON.stringify(response));
                                        //var selected = $("#diagram").getKendoDiagram().select();
                                        //var nodeById = getNodeById(selected);
                                        //alert(nodeById)
                                        // code dialog
                                    }
                                });
                                return false;

                            }
                        }


                    }
                }

            },
            data:{}
        },
        {   name:'Google'
            ,label:'Google'
            ,type:'target'
            ,image:"http://www.about-searchengines.com/_/rsrc/1375438908754/home/google-g-logo-s.png"
            ,fields:[
             {name:'id',required:true}
            ,{name:'title',required:true}
            ,{name:'description',required:true}
            ,{name:'google_product_category',required:true}
            ,{name:'product_type',required:true}
            ,{name:'link',required:true}
            ,{name:'image_link',required:true}
            ,{name:'price',required:true}
            ,{name:'condition',required:true}
            ,{name:'availability',required:true}
            ,{name:'brand',required:true}
            ,{name:'gtin',required:false}
            ,{name:'mpn',required:false}
            ,{name:'item_group_id',required:false}
            ,{name:'additional_image_link',required:false}
            ,{name:'sale_price',required:false}
            ,{name:'sale_price_effective_date',required:false}
            ,{name:'gender',required:false}
            ,{name:'age_group',required:false}
            ,{name:'color',required:false}
            ,{name:'size',required:false}
            ,{name:'material',required:false}
            ,{name:'pattern',required:false}
            ,{name:'shipping_weight',required:false}
            ,{name:'adwords_grouping',required:false}
            ,{name:'adwords_labels',required:false}
            ,{name:'excluded_destination',required:false}
            ,{name:'online_only',required:false}
            ,{name:'expiration_date',required:false}
            ,{name:'adwords_redirect',required:false}
            ,{name:'adult',required:false}
            ,{name:'multipack',required:false}
        ]}
    ];

    // Pull from google feed canvas from /storage
    // if empty, draw
    var LocalStorage = {};

    /**
     * Edit Node now , add more fields or whatever
     */
    function editNode(nodeId){
        alert('editing ' + nodeId);
        // update properties on node
        //nodes[0].fields.push('field4');
        //drawNode(nodes[0],nodeId)




//            $("#form").alpaca({
//                "schema": {
//                    "title":"User Feedback",
//                    "description":"What do you think about Alpaca?",
//                    "type":"object",
//                    "properties": {
//                        "name": {
//                            "type":"string",
//                            "title":"Name"
//                        },
//                        "feedback": {
//                            "type":"string",
//                            "title":"Feedback"
//                        },
//                        "ranking": {
//                            "type":"string",
//                            "title":"Ranking",
//                            "enum":['excellent','ok','so so']
//                        }
//                    }
//                }
//            });
//
//
//            $('#myModal').dialog({
//                autoOpen:true,
//                my: "center",
//                at: "center",
//                of: window
//            });

    }

    function addField(nodeId,node,field){
        var rowId = nodeId + '_' + field.name
        var tableRow = '<tr id=' + rowId + '>' +
                '<td align="center">'+field.name+'</td>'+
                '</tr>'
        $('#' + nodeId + " .table").append(tableRow);
        setEndPoint(rowId,node)
    }

    function addSourceEndPoint(rowId){
        jsPlumb.addEndpoint(rowId, {
            anchors:['Right'],
            isSource:true,
            isTarget:false,
            endpoint : ["Rectangle",{width:15, height:15}],
            endpointStyle : {fillStyle:"orange", outlineColor:"orange", outlineWidth:1 },
            hoverPaintStyle:{ fillStyle:"yellow"},
            maxConnections:10
        });
    }

    function addTargetEndPoint(rowId){
                jsPlumb.addEndpoint(rowId, {
                    anchors:['Left'],
                    isSource:false,
                    isTarget:true,
                    endpoint : ["Rectangle",{width:12, height:12}],
                    endpointStyle : {fillStyle:"blue", outlineColor:"blue", outlineWidth:1},
                    hoverPaintStyle:{fillStyle:"lightblue"},
                    maxConnections:1,
                    onMaxConnections: function(){
                        console.log('max connection limit reached')
                    }
                });
    }

    function setEndPoint(rowId,node){
        if (node.type === 'transform'){
            addSourceEndPoint(rowId);
            addTargetEndPoint(rowId);
        }
        if (node.type === 'source'){
            addSourceEndPoint(rowId);
        }
        if (node.type === 'target'){
            addTargetEndPoint(rowId);
        }
    }

    function drawNode(node,nodeId){
        $.get("assests/node.html?time=" + (new Date()).getTime(), function(data) {
            var nodeId = nodeId ? nodeId : (node.name + '_' + new Date().getTime());
            $('.canvas').append(data.format({node_id: nodeId,node_name:node.name,nodeClass:node.name,image:node.image}));
            jsPlumb.draggable(nodeId,{containment:"parent"});
            node.fields.forEach(function(field){
                addField(nodeId,node,field);
            });
        });
    }

    jsPlumb.ready(function() {
        $("#outterSplitter").ejSplitter({
            height: 1520,
            //width: "100%",
            orientation: ej.Orientation.Horizontal,
            enableAutoResize: true,
            properties: [{ collapsible: true }]
        });
        $('#Grid').ejGrid({
            dataSource: shipDetails
        });

        jsPlumb.importDefaults({
            Connector: ["Straight"],
            PaintStyle: {strokeStyle: "rgba(50,50,50,1)", lineWidth:2.5},
            HoverPaintStyle: { lineWidth:3.5,
                strokeStyle: 'rgba(0, 17, 255, 1)'
            },
            ConnectionOverlays: [
                [ "Arrow", {
                    width:10,
                    height:10, location:0.5, id:"arrow",
                    events:{
                        click: function(){
                            //alert('connection overlay clicked')
                            console.log('connection overlay clicked')
                        },
                    }
                } ],
                // this is how you add label to arrow
                //[ "Label", { label:"Relationship", id:"lblPrimary_" + 'casasc' } ]
            ]
        })
        jsPlumb.setContainer("canvas");
        jsPlumb.bind("connection", function (info, originalEvent) {
            //alert("connected "+info.sourceId+" and "+info.targetId + " via "+info.connection);
            var connection1 = info.connection;
            connection1.bind("click", function(connection, originalEvent) {
                //alert("you clicked on "+ connection);
                connection.setPaintStyle({strokeStyle:"rgba(0, 17, 255, 1)", lineWidth:3.5});
                keyboardJS.on('del', function(event, keys, keyComboStr) {
                    jsPlumb.detach(connection)
                })
                keyboardJS.on('esc', function(event, keys, keyComboStr) {
                    connection.setPaintStyle({strokeStyle: "rgba(50,50,50,1)", lineWidth:2.5});
                })

            });
        });
        nodes.forEach(function(n){
            drawNode(n)
        });
    });



</script>
</html>